{"ast":null,"code":"var _jsxFileName = \"/Users/hamdiceylan/Projects/financial-house-test/client/src/features/dashboard/TransactionDetail/TransactionDetail.js\";\nimport React, { Component } from 'react';\nimport { Grid, Header, Item, Segment, Icon } from \"semantic-ui-react\";\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { getTransactionDetail } from '../dashboardActions';\nimport LoadingComponent from '../../../app/layout/LoadingComponent';\nconst actions = {\n  getTransactionDetail\n};\n\nconst mapState = state => ({\n  transaction: state.dashboard.currentTransaction\n});\n\nexport class TransactionDetail extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      transaction: {},\n      loading: true\n    };\n  }\n\n  async componentDidMount() {\n    const transactionId = this.props.match.params.id;\n    await this.props.getTransactionDetail(transactionId);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    this.setState({\n      transaction: nextProps.transaction,\n      loading: nextProps.loading\n    });\n  }\n\n  render() {\n    const _this$state = this.state,\n          transaction = _this$state.transaction,\n          loading = _this$state.loading;\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, loading && React.createElement(LoadingComponent, {\n      inverted: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }), React.createElement(Grid, {\n      centered: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, React.createElement(Grid.Column, {\n      width: 14,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, React.createElement(Header, {\n      as: \"h2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      name: \"list\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }), React.createElement(Header.Content, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, \"Transaction Details\", React.createElement(Header.Subheader, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, \"You can see transaction details here.\"))), React.createElement(Segment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(Item.Group, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, transaction.customerInfo && React.createElement(Item, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(Item.Content, {\n      verticalAlign: \"bottom\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(Header, {\n      as: \"h1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, transaction.customerInfo.billingFirstName, \" \", transaction.customerInfo.billingLastName), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }), React.createElement(Header, {\n      as: \"h3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, transaction.customerInfo.email), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }), React.createElement(Header, {\n      as: \"h3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, transaction.customerInfo.billingState)))))), React.createElement(Grid.Column, {\n      width: 14,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(Segment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      columns: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, transaction.transaction && React.createElement(Grid.Column, {\n      width: 8,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(Header, {\n      icon: \"list\",\n      content: \"Transaction Details\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, \"Transaction Id: \", React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, transaction.transaction.merchant.transactionId)), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, \"Fx TransactionId: \", React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, transaction.transaction.merchant.fxTransactionId)), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, \"ReferenceNo: \", React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, transaction.transaction.merchant.referenceNo)), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, \"Operation: \", React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, transaction.transaction.merchant.operation)), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, \"Status: \", React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, transaction.transaction.merchant.status)), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, \"Type: \", React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, transaction.transaction.merchant.type))), transaction.fx && React.createElement(Grid.Column, {\n      width: 8,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(Header, {\n      content: \"Fx Details\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, \"Original Amount: \", React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, transaction.fx.merchant.originalAmount)), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, \"Original Currency: \", React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, transaction.fx.merchant.originalCurrency))))))));\n  }\n\n}\nexport default withRouter(connect(mapState, actions)(TransactionDetail));","map":{"version":3,"sources":["/Users/hamdiceylan/Projects/financial-house-test/client/src/features/dashboard/TransactionDetail/TransactionDetail.js"],"names":["React","Component","Grid","Header","Item","Segment","Icon","withRouter","connect","getTransactionDetail","LoadingComponent","actions","mapState","state","transaction","dashboard","currentTransaction","TransactionDetail","loading","componentDidMount","transactionId","props","match","params","id","componentWillReceiveProps","nextProps","setState","render","customerInfo","billingFirstName","billingLastName","email","billingState","merchant","fxTransactionId","referenceNo","operation","status","type","fx","originalAmount","originalCurrency"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport { Grid, Header, Item, Segment, Icon } from \"semantic-ui-react\";\nimport { withRouter } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport { getTransactionDetail } from '../dashboardActions'\nimport LoadingComponent from '../../../app/layout/LoadingComponent';\n\nconst actions = {\n  getTransactionDetail\n}\n\nconst mapState = (state) => ({\n  transaction : state.dashboard.currentTransaction\n})\n\nexport class TransactionDetail extends Component {\n  state = {\n    transaction : {},\n    loading: true\n  }\n  async componentDidMount(){ \n    const transactionId = this.props.match.params.id;\n    await this.props.getTransactionDetail(transactionId);\n  }\n\n  componentWillReceiveProps(nextProps){\n      this.setState({\n        transaction:nextProps.transaction,\n        loading: nextProps.loading\n      })\n  }\n  render() {\n    const {transaction, loading} = this.state;\n\n    return (\n      <React.Fragment>\n        {loading && <LoadingComponent inverted={true} />}\n        <Grid centered>\n        <Grid.Column width={14}>\n            <Header as='h2'>\n              <Icon name='list' />\n              <Header.Content>\n                Transaction Details\n                <Header.Subheader>You can see transaction details here.</Header.Subheader>\n              </Header.Content>\n            </Header>\n            <Segment>\n                <Item.Group>\n                  {transaction.customerInfo && \n                    <Item>\n                        <Item.Content verticalAlign='bottom'>\n                            <Header as='h1'>{transaction.customerInfo.billingFirstName} {transaction.customerInfo.billingLastName}</Header>\n                            <br/>\n                            <Header as='h3'>{transaction.customerInfo.email}</Header>\n                            <br/>\n                            <Header as='h3'>{transaction.customerInfo.billingState}</Header>\n                        </Item.Content>\n                    </Item>}\n                </Item.Group>\n            </Segment>\n        </Grid.Column>\n        <Grid.Column width={14}>\n              <Segment>\n                  <Grid columns={2}>\n                      {transaction.transaction &&\n                      <Grid.Column width={8}>\n                          <Header icon='list' content='Transaction Details'/>\n                          <p>Transaction Id: <strong>{transaction.transaction.merchant.transactionId}</strong></p>\n                          <p>Fx TransactionId: <strong>{transaction.transaction.merchant.fxTransactionId}</strong></p>\n                          <p>ReferenceNo: <strong>{transaction.transaction.merchant.referenceNo}</strong></p>\n                          <p>Operation: <strong>{transaction.transaction.merchant.operation}</strong></p>\n                          <p>Status: <strong>{transaction.transaction.merchant.status}</strong></p>\n                          <p>Type: <strong>{transaction.transaction.merchant.type}</strong></p>\n                      </Grid.Column>}\n                      {transaction.fx &&\n                      <Grid.Column width={8}>\n                          <Header content='Fx Details'/>\n                          <p>Original Amount: <strong>{transaction.fx.merchant.originalAmount}</strong></p>\n                          <p>Original Currency: <strong>{transaction.fx.merchant.originalCurrency}</strong></p>\n                      </Grid.Column>}\n                  </Grid>\n              </Segment>\n          </Grid.Column>\n      </Grid>\n      </React.Fragment>\n\n    )\n  }\n}\n\nexport default withRouter(connect(mapState,actions)(TransactionDetail));\n"]},"metadata":{},"sourceType":"module"}