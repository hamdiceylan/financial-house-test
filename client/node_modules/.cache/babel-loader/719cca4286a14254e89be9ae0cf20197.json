{"ast":null,"code":"import { createStore, applyMiddleware } from 'redux';\nimport rootReducer from '../reducers/rootReducer';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\nexport const configureStore = preloadedState => {\n  const middlewares = [thunk];\n  const middlewareEnhancer = applyMiddleware(...middlewares);\n  const storeEnhancers = [middlewareEnhancer];\n  const composedEnhancer = composeWithDevTools(...storeEnhancers);\n  const store = createStore(rootReducer, preloadedState, composedEnhancer);\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (module.hot) {\n      module.hot.accept('../reducers/rootReducer', () => {\n        const newRootReducer = require('../reducers/rootReducer').default;\n\n        store.replaceReducer(newRootReducer);\n      });\n    }\n  }\n\n  return store;\n};","map":{"version":3,"sources":["/Users/hamdiceylan/Projects/financial-house-test/client/src/app/store/configureStore.js"],"names":["createStore","applyMiddleware","rootReducer","composeWithDevTools","thunk","configureStore","preloadedState","middlewares","middlewareEnhancer","storeEnhancers","composedEnhancer","store","process","env","NODE_ENV","module","hot","accept","newRootReducer","require","default","replaceReducer"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,QAA6C,OAA7C;AACA,OAAOC,WAAP,MAAwB,yBAAxB;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,OAAOC,KAAP,MAAkB,aAAlB;AAIA,OAAO,MAAMC,cAAc,GAAIC,cAAD,IAAmB;AAC7C,QAAMC,WAAW,GAAG,CAACH,KAAD,CAApB;AACA,QAAMI,kBAAkB,GAAGP,eAAe,CAAC,GAAGM,WAAJ,CAA1C;AAEA,QAAME,cAAc,GAAG,CAACD,kBAAD,CAAvB;AAEA,QAAME,gBAAgB,GAAGP,mBAAmB,CACxC,GAAGM,cADqC,CAA5C;AAGA,QAAME,KAAK,GAAGX,WAAW,CACrBE,WADqB,EAErBI,cAFqB,EAGrBI,gBAHqB,CAAzB;;AAMA,MAAGE,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAA5B,EAAyC;AACrC,QAAGC,MAAM,CAACC,GAAV,EAAc;AACVD,MAAAA,MAAM,CAACC,GAAP,CAAWC,MAAX,CAAkB,yBAAlB,EAA6C,MAAM;AAC/C,cAAMC,cAAc,GAAGC,OAAO,CAAC,yBAAD,CAAP,CAAmCC,OAA1D;;AACAT,QAAAA,KAAK,CAACU,cAAN,CAAqBH,cAArB;AACH,OAHD;AAIH;AACJ;;AAED,SAAOP,KAAP;AACH,CAzBM","sourcesContent":["import { createStore, applyMiddleware } from 'redux'\nimport rootReducer from '../reducers/rootReducer'\nimport { composeWithDevTools } from 'redux-devtools-extension'\nimport thunk from 'redux-thunk'\n\n\n\nexport const configureStore = (preloadedState) =>{\n    const middlewares = [thunk];\n    const middlewareEnhancer = applyMiddleware(...middlewares);\n\n    const storeEnhancers = [middlewareEnhancer];\n\n    const composedEnhancer = composeWithDevTools(\n        ...storeEnhancers)\n\n    const store = createStore(\n        rootReducer,\n        preloadedState,\n        composedEnhancer\n    )\n\n    if(process.env.NODE_ENV !== 'production'){\n        if(module.hot){\n            module.hot.accept('../reducers/rootReducer', () => {\n                const newRootReducer = require('../reducers/rootReducer').default;\n                store.replaceReducer(newRootReducer);\n            })\n        }\n    }\n\n    return store;\n}"]},"metadata":{},"sourceType":"module"}