{"ast":null,"code":"import { FETCH_TRANSACTIONS, FETCH_CLIENT, FETCH_TRANSACTION_DETAIL } from './dashboardConstants';\nimport { asyncActionStart, asyncActionFinish, asyncActionError } from '../async/asyncActions';\nexport const fetchTransaction = () => {\n  return async (dispatch, getState) => {\n    try {\n      dispatch(asyncActionStart());\n      const response = await fetch('/api/v3/transaction/list', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': localStorage.getItem('access_token')\n        },\n        body: JSON.stringify({\n          \"fromDate\": \"2011-07-01\",\n          \"toDate\": \"2019-08-01\"\n        })\n      });\n      const body = await response.json();\n      dispatch({\n        type: FETCH_TRANSACTIONS,\n        payload: {\n          body\n        }\n      });\n      dispatch(asyncActionFinish());\n    } catch (error) {\n      dispatch(asyncActionError());\n      console.log(error);\n    }\n  };\n};\nexport const getClientDetail = transactionId => {\n  return async (dispatch, getState) => {\n    try {\n      dispatch(asyncActionStart());\n      const response = await fetch('/api/v3/client', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': localStorage.getItem('access_token')\n        },\n        body: JSON.stringify({\n          \"transactionId\": transactionId\n        })\n      });\n      const body = await response.json();\n      dispatch({\n        type: FETCH_CLIENT,\n        payload: {\n          body\n        }\n      });\n      dispatch(asyncActionFinish());\n    } catch (error) {\n      dispatch(asyncActionError());\n      console.log(error);\n    }\n  };\n};\nexport const getTransactionDetail = transactionId => {\n  return async (dispatch, getState) => {\n    try {\n      dispatch(asyncActionStart());\n      const response = await fetch('/api/v3/transaction', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': localStorage.getItem('access_token')\n        },\n        body: JSON.stringify({\n          \"transactionId\": transactionId\n        })\n      });\n      const body = await response.json();\n      dispatch({\n        type: FETCH_TRANSACTION_DETAIL,\n        payload: {\n          body\n        }\n      });\n      dispatch(asyncActionFinish());\n    } catch (error) {\n      dispatch(asyncActionError());\n      console.log(error);\n    }\n  };\n};","map":{"version":3,"sources":["/Users/hamdiceylan/Projects/financial-house-test/client/src/features/dashboard/dashboardActions.js"],"names":["FETCH_TRANSACTIONS","FETCH_CLIENT","FETCH_TRANSACTION_DETAIL","asyncActionStart","asyncActionFinish","asyncActionError","fetchTransaction","dispatch","getState","response","fetch","method","headers","localStorage","getItem","body","JSON","stringify","json","type","payload","error","console","log","getClientDetail","transactionId","getTransactionDetail"],"mappings":"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","sourcesContent":["import { FETCH_TRANSACTIONS, FETCH_CLIENT, FETCH_TRANSACTION_DETAIL } from './dashboardConstants'\nimport { asyncActionStart, asyncActionFinish, asyncActionError } from '../async/asyncActions'\n\nexport const fetchTransaction = () => {\n    return async (dispatch, getState) => {\n      try {\n        dispatch(asyncActionStart())\n        const response = await fetch('/api/v3/transaction/list', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n            'Authorization': localStorage.getItem('access_token')\n          },\n          body: JSON.stringify({\"fromDate\": \"2011-07-01\",\"toDate\": \"2019-08-01\"})\n        });\n        const body = await response.json();\n        dispatch({type: FETCH_TRANSACTIONS,payload: {body}})\n        dispatch(asyncActionFinish())\n      } catch(error){\n        dispatch(asyncActionError())\n        console.log(error);\n      }\n    }\n};\n\nexport const getClientDetail = (transactionId) => {\n    return async (dispatch,getState) => {\n        try{\n            dispatch(asyncActionStart())\n            const response = await fetch('/api/v3/client', {\n                method: 'POST',\n                headers: {\n                  'Content-Type': 'application/json',\n                  'Authorization': localStorage.getItem('access_token')\n                },\n                body: JSON.stringify({\"transactionId\": transactionId})\n              });\n              const body = await response.json();\n              dispatch({type: FETCH_CLIENT,payload: {body}})\n\n            dispatch(asyncActionFinish())\n        } catch(error){\n            dispatch(asyncActionError())\n            console.log(error);\n        }\n    }\n};\n\nexport const getTransactionDetail = (transactionId) => {\n    return async (dispatch,getState) => {\n        try{\n            dispatch(asyncActionStart())\n            const response = await fetch('/api/v3/transaction', {\n                method: 'POST',\n                headers: {\n                  'Content-Type': 'application/json',\n                  'Authorization': localStorage.getItem('access_token')\n                },\n                body: JSON.stringify({\"transactionId\": transactionId})\n              });\n              const body = await response.json();\n              dispatch({type: FETCH_TRANSACTION_DETAIL,payload: {body}})\n\n            dispatch(asyncActionFinish())\n        } catch(error){\n            dispatch(asyncActionError())\n            console.log(error);\n        }\n    }\n};"]},"metadata":{},"sourceType":"module"}