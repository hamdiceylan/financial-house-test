{"ast":null,"code":"var _jsxFileName = \"/Users/hamdiceylan/Projects/financial-house-test/client/src/features/dashboard/ClientDetail/ClientDetail.js\";\nimport React, { Component } from 'react';\nimport { Grid, Header, Item, Segment, Icon } from \"semantic-ui-react\";\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { getClientDetail } from '../dashboardActions';\nimport LoadingComponent from '../../../app/layout/LoadingComponent';\nconst actions = {\n  getClientDetail\n};\n\nconst mapState = state => ({\n  client: state.dashboard.currentClient\n});\n\nclass ClientDetail extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      client: {},\n      loading: true\n    };\n  }\n\n  async componentDidMount() {\n    const transactionId = this.props.match.params.id;\n    await this.props.getClientDetail(transactionId);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    this.setState({\n      client: nextProps.client.customerInfo,\n      loading: nextProps.loading\n    });\n  }\n\n  render() {\n    const _this$state = this.state,\n          client = _this$state.client,\n          loading = _this$state.loading;\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, loading && React.createElement(LoadingComponent, {\n      inverted: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }), React.createElement(Grid, {\n      centered: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, React.createElement(Grid.Column, {\n      width: 14,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, React.createElement(Header, {\n      as: \"h2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      name: \"list\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }), React.createElement(Header.Content, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, \"Client Details\", React.createElement(Header.Subheader, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, \"You can see client details here.\"))), React.createElement(Segment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, React.createElement(Item.Group, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, React.createElement(Item, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(Item.Content, {\n      verticalAlign: \"bottom\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(Header, {\n      as: \"h1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, client.billingFirstName, \" \", client.billingLastName), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }), React.createElement(Header, {\n      as: \"h3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, client.email), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }), React.createElement(Header, {\n      as: \"h3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, client.billingState)))))), React.createElement(Grid.Column, {\n      width: 14,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(Segment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      columns: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(Grid.Column, {\n      width: 8,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(Header, {\n      icon: \"shipping\",\n      content: \"Shipping Details\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, \"Address: \", React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, client.shippingAddress1, \" \", client.shippingAddress2)), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, \"Shipping City \", React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, client.shippingCity)), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, \"Shipping Country: \", React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, client.shippingCountry)), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, \"Shipping Post Code: \", React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, client.shippingPostcode))), React.createElement(Grid.Column, {\n      width: 8,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, React.createElement(Header, {\n      icon: \"payment\",\n      content: \"Card Details\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, \"Card number: \", React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, client.number)), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, \"Expiry Month: \", React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, client.expiryMonth)), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, \"Expiry Year: \", React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, client.expiryYear))))))));\n  }\n\n}\n\nexport default withRouter(connect(mapState, actions)(ClientDetail));","map":{"version":3,"sources":["/Users/hamdiceylan/Projects/financial-house-test/client/src/features/dashboard/ClientDetail/ClientDetail.js"],"names":["React","Component","Grid","Header","Item","Segment","Icon","withRouter","connect","getClientDetail","LoadingComponent","actions","mapState","state","client","dashboard","currentClient","ClientDetail","loading","componentDidMount","transactionId","props","match","params","id","componentWillReceiveProps","nextProps","setState","customerInfo","render","billingFirstName","billingLastName","email","billingState","shippingAddress1","shippingAddress2","shippingCity","shippingCountry","shippingPostcode","number","expiryMonth","expiryYear"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport { Grid, Header, Item, Segment, Icon} from \"semantic-ui-react\";\nimport { withRouter } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport { getClientDetail } from '../dashboardActions'\nimport LoadingComponent from '../../../app/layout/LoadingComponent';\n\n\nconst actions = {\n    getClientDetail\n}\n\nconst mapState = (state) => ({\n    client : state.dashboard.currentClient\n})\n\nclass ClientDetail extends Component {\n    state = {\n        client : {},\n        loading: true\n    }\n    async componentDidMount(){\n        const transactionId = this.props.match.params.id;\n        await this.props.getClientDetail(transactionId);\n    }\n\n    componentWillReceiveProps(nextProps){\n        this.setState({\n            client:nextProps.client.customerInfo,\n            loading: nextProps.loading\n        })\n    }\n\n    render() {\n        const {client, loading} = this.state;\n        return (\n            <React.Fragment>\n                {loading && <LoadingComponent inverted={true} />}\n                <Grid centered>\n                    <Grid.Column width={14}>\n                        <Header as='h2'>\n                            <Icon name='list' />\n                            <Header.Content>\n                                Client Details\n                                <Header.Subheader>You can see client details here.</Header.Subheader>\n                            </Header.Content>\n                        </Header>\n                        <Segment>\n                            <Item.Group>\n                                <Item>\n                                    <Item.Content verticalAlign='bottom'>\n                                        <Header as='h1'>{client.billingFirstName} {client.billingLastName}</Header>\n                                        <br/>\n                                        <Header as='h3'>{client.email}</Header>\n                                        <br/>\n                                        <Header as='h3'>{client.billingState}</Header>\n                                    </Item.Content>\n                                </Item>\n                            </Item.Group>\n                        </Segment>\n                    </Grid.Column>\n                    <Grid.Column width={14}>\n                        <Segment>\n                            <Grid columns={2}>\n                                <Grid.Column width={8}>\n                                    <Header icon='shipping' content='Shipping Details'/>\n                                    <p>Address: <strong>{client.shippingAddress1} {client.shippingAddress2}</strong></p>\n                                    <p>Shipping City <strong>{client.shippingCity}</strong></p>\n                                    <p>Shipping Country: <strong>{client.shippingCountry}</strong></p>\n                                    <p>Shipping Post Code: <strong>{client.shippingPostcode}</strong></p>\n                                </Grid.Column>\n                                <Grid.Column width={8}>\n                                    <Header icon='payment' content='Card Details'/>\n                                    <p>Card number: <strong>{client.number}</strong></p>\n                                    <p>Expiry Month: <strong>{client.expiryMonth}</strong></p>\n                                    <p>Expiry Year: <strong>{client.expiryYear}</strong></p>\n                                </Grid.Column>\n                            </Grid>\n                        </Segment>\n                    </Grid.Column>\n                </Grid>\n            </React.Fragment>\n        );\n    }\n}\n\nexport default withRouter(connect(mapState,actions)(ClientDetail));"]},"metadata":{},"sourceType":"module"}