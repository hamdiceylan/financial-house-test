{"ast":null,"code":"var _jsxFileName = \"/Users/hamdiceylan/Projects/financial-house-test/client/src/features/dashboard/TransactionList/TransactionList.js\";\nimport React, { Component } from 'react';\nimport { Grid, Table } from 'semantic-ui-react';\nimport { connect } from 'react-redux';\nimport { fetchTransaction } from '../dashboardActions';\nimport { Link } from 'react-router-dom';\nimport LoadingComponent from '../../../app/layout/LoadingComponent';\nconst actions = {\n  fetchTransaction\n};\n\nconst mapState = state => ({\n  transactions: state.dashboard.transactions,\n  loading: state.async.loading\n});\n\nexport class TransactionList extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      transactions: [],\n      loading: true\n    };\n  }\n\n  async componentDidMount() {\n    await this.props.fetchTransaction();\n  }\n\n  componentWillReceiveProps(nextProps) {\n    this.setState({\n      transactions: nextProps.transactions,\n      loading: nextProps.loading\n    });\n  }\n\n  render() {\n    const _this$state = this.state,\n          transactions = _this$state.transactions,\n          loading = _this$state.loading;\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, loading && React.createElement(LoadingComponent, {\n      inverted: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }), React.createElement(Grid, {\n      centered: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, React.createElement(Grid.Column, {\n      width: 14,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, React.createElement(Table, {\n      celled: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, React.createElement(Table.Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, React.createElement(Table.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, React.createElement(Table.HeaderCell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, \"Client Name\"), React.createElement(Table.HeaderCell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, \"Transaction Id\"), React.createElement(Table.HeaderCell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, \"Converted Amount\"), React.createElement(Table.HeaderCell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, \"Currency\"))), React.createElement(Table.Body, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, transactions.length > 0 && transactions.map((transaction, index) => React.createElement(Table.Row, {\n      key: index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(Table.Cell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/dashboard/client-detail/\".concat(transaction.transaction.merchant.transactionId),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, transaction.customerInfo.billingFirstName, \" \", transaction.customerInfo.billingLastName)), React.createElement(Table.Cell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/dashboard/transaction-detail/\".concat(transaction.transaction.merchant.transactionId),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, transaction.transaction.merchant.transactionId)), React.createElement(Table.Cell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, transaction.fx.merchant.convertedAmount), React.createElement(Table.Cell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, transaction.fx.merchant.convertedCurrency))))))));\n  }\n\n}\nexport default connect(mapState, actions)(TransactionList);","map":{"version":3,"sources":["/Users/hamdiceylan/Projects/financial-house-test/client/src/features/dashboard/TransactionList/TransactionList.js"],"names":["React","Component","Grid","Table","connect","fetchTransaction","Link","LoadingComponent","actions","mapState","state","transactions","dashboard","loading","async","TransactionList","componentDidMount","props","componentWillReceiveProps","nextProps","setState","render","length","map","transaction","index","merchant","transactionId","customerInfo","billingFirstName","billingLastName","fx","convertedAmount","convertedCurrency"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { Grid, Table } from 'semantic-ui-react'\nimport { connect } from 'react-redux'\nimport { fetchTransaction } from '../dashboardActions'\nimport { Link } from 'react-router-dom';\nimport LoadingComponent from '../../../app/layout/LoadingComponent';\n\nconst actions = {\n    fetchTransaction\n}\n\nconst mapState = (state) => ({\n    transactions : state.dashboard.transactions,\n    loading: state.async.loading\n})\n\nexport class TransactionList extends Component {\n  state = {\n      transactions : [],\n      loading: true\n  }\n  async componentDidMount(){ \n    await this.props.fetchTransaction();\n  }\n\n  componentWillReceiveProps(nextProps){\n      this.setState({\n        transactions:nextProps.transactions,\n        loading: nextProps.loading\n      })\n  }\n  \n  render() {\n    const {transactions, loading} = this.state;\n\n    return (\n        <React.Fragment>\n            {loading && <LoadingComponent inverted={true} />}\n            <Grid centered>\n                <Grid.Column width={14}>\n                    <Table celled>\n                    <Table.Header>\n                        <Table.Row>\n                        <Table.HeaderCell>Client Name</Table.HeaderCell>\n                        <Table.HeaderCell>Transaction Id</Table.HeaderCell>\n                        <Table.HeaderCell>Converted Amount</Table.HeaderCell>\n                        <Table.HeaderCell>Currency</Table.HeaderCell>\n                        </Table.Row>\n                    </Table.Header>\n                    <Table.Body>\n                        {transactions.length > 0 && transactions.map((transaction,index) => (\n                            <Table.Row key={index}>\n                                <Table.Cell>\n                                    <Link to={`/dashboard/client-detail/${transaction.transaction.merchant.transactionId}`}>\n                                        {transaction.customerInfo.billingFirstName} {transaction.customerInfo.billingLastName}\n                                    </Link>\n                                </Table.Cell>\n                                <Table.Cell>\n                                    <Link to={`/dashboard/transaction-detail/${transaction.transaction.merchant.transactionId}`}>\n                                        {transaction.transaction.merchant.transactionId}\n                                    </Link>\n                                </Table.Cell>\n                                <Table.Cell>{transaction.fx.merchant.convertedAmount}</Table.Cell>\n                                <Table.Cell>{transaction.fx.merchant.convertedCurrency}</Table.Cell>\n                            </Table.Row>\n                        ))}\n                    </Table.Body>\n                    </Table>\n                </Grid.Column>\n            </Grid>\n        </React.Fragment>\n      )\n  }\n}\n\nexport default connect(mapState,actions)(TransactionList)\n\n"]},"metadata":{},"sourceType":"module"}